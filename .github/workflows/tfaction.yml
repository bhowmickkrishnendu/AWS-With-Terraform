name: CI/CD Terraform Pipeline

# Trigger on PR merge to master and manual dispatch with action selection
on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      action:
        description: "Action to take (apply/destroy)"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

env:
  AWS_REGION: ap-south-1

jobs:
  init:
    # Reusable init workflow
    uses: bhowmickkrishnendu/terraform-gha-workflows/.github/workflows/init.yml@v1.0.14
    with:
      working-directory: v2_2025/AWS-Main/IAM_Role_Policy_Root
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  validate:
    needs: init
    uses: bhowmickkrishnendu/terraform-gha-workflows/.github/workflows/validate.yml@v1.0.14
    with:
      working-directory: v2_2025/AWS-Main/IAM_Role_Policy_Root
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  plan:
    needs: validate
    uses: bhowmickkrishnendu/terraform-gha-workflows/.github/workflows/plan.yml@v1.0.14
    with:
      working-directory: v2_2025/AWS-Main/IAM_Role_Policy_Root
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  approve:
    if: github.event_name == 'workflow_dispatch'
    needs: plan
    runs-on: ubuntu-latest
    environment:
      name: approval  # Must match environment created in repo
    steps:
      - name: Await manual approval before apply/destroy
        run: echo "Waiting for manual approval..."

  apply:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
    needs: approve
    uses: bhowmickkrishnendu/terraform-gha-workflows/.github/workflows/apply.yml@v1.0.14
    with:
      working-directory: v2_2025/AWS-Main/IAM_Role_Policy_Root
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  destroy:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
    needs: approve
    uses: bhowmickkrishnendu/terraform-gha-workflows/.github/workflows/destroy.yml@v1.0.14
    with:
      working-directory: v2_2025/AWS-Main/IAM_Role_Policy_Root
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
